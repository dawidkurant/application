<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.0" />
    <PackageReference Include="FluentAssertions" Version="6.1.0" />
    <PackageReference Include="FluentValidation.AspNetCore" Version="10.4.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="5.0.3" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Testing" Version="5.0.11" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.13" />
    <PackageReference Include="Microsoft.AspNetCore.ApiAuthorization.IdentityServer" Version="5.0.13" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="5.0.13" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="5.0.13" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="5.0.13" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.13" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="5.0.11" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="5.0.13" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.13" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.13" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="5.0.2" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.6.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Moq" Version="4.16.1" />
    <PackageReference Include="NLog.Web.AspNetCore" Version="4.10.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="5.6.3" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\login\login.component.spec.ts" />
    <None Remove="ClientApp\src\app\login\login.component.ts" />
    <None Remove="ClientApp\src\app\products\categories.service.spec.ts" />
    <None Remove="ClientApp\src\app\products\categories.service.ts" />
    <None Remove="ClientApp\src\app\products\category.ts" />
    <None Remove="ClientApp\src\app\products\groups.service.spec.ts" />
    <None Remove="ClientApp\src\app\products\groups.service.ts" />
    <None Remove="ClientApp\src\app\products\unit.ts" />
    <None Remove="ClientApp\src\app\products\units.service.spec.ts" />
    <None Remove="ClientApp\src\app\products\units.service.ts" />
    <None Remove="ClientApp\src\app\register\register.component.spec.ts" />
    <None Remove="ClientApp\src\app\register\register.component.ts" />
    <None Remove="ClientApp\src\app\services\auth.service.spec.ts" />
    <None Remove="ClientApp\src\app\services\auth.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Remove="ClientApp\src\app\products\create\create.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\products\details\details.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\products\edit\edit.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\products\group.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\products\list\list.component.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\products\list\product.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\products\products-routing.module.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\products\products.module.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\products\products.service.spec.ts" />
    <TypeScriptCompile Remove="ClientApp\src\app\products\products.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="wwwroot\StaticFilesConfiguration.cs" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Images\" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Update="ClientApp\src\app\register\register.component.spec.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Update="ClientApp\src\app\register\register.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ProjectExtensions><VisualStudio><UserProperties appsettings_1json__JsonSchema="" clientapp_4package_1json__JsonSchema="" clientapp_4tsconfig_1json__JsonSchema="" /></VisualStudio></ProjectExtensions>

</Project>
